# print("code change", flush=True)
import json
import os
import time


import numpy as np
import torch
from transformers import pipeline
from datetime import datetime
# adding comment here to check version in s3

class InferlessPythonModel:

    # replace ##task_type## and ##huggingface_name## with appropriate values
    def initialize(self):
        self.generator = pipeline("text-generation", model="EleutherAI/gpt-neo-125M",device=0)
        # time.sleep(2000)
        

    # inputs is a dictonary where the keys are input names and values are actual input data
    # e.g. in the below code the input name is prompt 
    # The output generated by the infer function should be a dictonary where keys are output names and values are actual output data
    # e.g. in the below code the output name is generated_txt
    def infer(self, inputs):
        print("we came inside infer ", flush=True)
        print("inputs-->", inputs, flush=True)
        prompt = inputs["prompt"]
        pipeline_output = self.generator(prompt, do_sample=True, min_length=50)
        print("pipeline_output-->", pipeline_output, flush=True)
        generated_txt = pipeline_output[0]["generated_text"]
        #print("generated_text--->", generated_txt, flush=True)
        return {"generated_text": generated_txt }

    # perform any cleanup activity here
    def finalize(self,args):
        self.pipe = None
